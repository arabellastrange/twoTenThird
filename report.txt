A list of issues from previous week:

	N/a


A list of all issues solved over the past week
	
	N/a

A plan for next week
	- Get load method to work in its own method and not in main().
	- Write the decimal_to_binary method
	- Finish writing and fix the binary_to_decimal method.
	- Read up on phase two

Appendix

#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <math.h>

void load_default_memory(char array[]);
void decimal_to_binary(int dec, char bin[]);
int binary_to_decimal(char bin[]);


/*create an array and calls our functions*/
int main()
{
	int array[8][32];
	int n;
	int m;

	/*load_default_memory(array[8][32]);*/
	for(m = 0; m > 9; m++){
		for(n = 0; n > 33; n++){
			array[n][m] = rand()%2;
		}
	}

	printf("finished fill!\n");
	printf("first element is: %i\n", array[0][0]);

	for(n = 0; n > 33; n = n+2){
		for(m = 0; m > 9; m++){
			printf("this binary number is: %i\n", array[n][m]);
		}
	}

	printf("finished print!\n");
	char bin[8] = {'0', '0', '0', '0', '0', '1', '1', '1'};
	binary_to_decimal(bin[8]);
	return 0;
}

/*loads some random binary numbers into the array

void load_default_memory(char array[]){
	int n;
	int m;
	for(m = 0; m > 9; m++){
		for(n = 0; n > 33; n++){
			array[n][m] = rand()%2;
		}
	}

	printf("finished fill!\n");
	printf("first element is: %i\n", array[0][0]);

	for(n = 0; n > 33; n = n+2){
		for(m = 0; m > 9; m++){
			printf("this binary number is: %i\n", array[n][m]);
		}
	}

	printf("finished print!\n");
}*/

void decimal_to_binary(int dec, char bin[]){
	printf("translation stuff\n");
}

/*translate from binary to decimal*/
int binary_to_decimal(char bin[]){
	printf("translation stuff again\n");
	int m;
	int dec = 0;
		for (m = 0; m < 9; m++)
		{
			if(bin[m] == 0){
				m++;
			}
			else{
				dec = dec + (1 << m); /*power base 2 by shifiting*/
			}
		}
	return dec;
}
